База данных - график работы салона красоты.

Система бронирования кабинетов и времени специалистов для салона красоты.

Пользователи смогут оставлять заявки на процедуру через web или telegram,
а менеджер подтверждает бронирование
с автоматической отправкой подтверждения бронирования.

Пояснения к таблицам и схема базы данных - в файле "Структура БД салон 31 08 2022.numbers-Таблицы.pdf"
https://disk.yandex.ru/i/AHyFybeYXvGXCA
База данных:
https://disk.yandex.ru/d/aVyGV-rc8wNq2A

Таблицы созданы и наполнены данными
Profession - перечень профессий
Staff - список персонала
Client - список клиентов
Room - список кабинетов
Procedure - список услуг
TimetableStatus - возможные состояния записей в расписании приема клиентов
WorkingTime - запланированное время работы специалистов
TimeTable - расписание приема клиентов.

Основная таблица, связывающая остальные - TimeTable - расписание оказания услуг клиентам
связывает ресурсы: время, персонал, комнаты.
Каждому промежутку времени с шагом 10 минут при инициализации присваивается статус «not assigned».
С этого момента этот промежуток виден клиенту и он может разместить заказ на услугу
(статус меняется на «requested»)
Заказ на услугу подтверждается или отклоняется менеджером (статус confirmed/rejected)
и о решении менеджера уведомляется клиент (email/telegram),
при этом менеджер назначает также комнату.
Менеджер может удалить заказ с уведомлением клиента. После этого изменения в запись закрыты.
Завершившемуся промежутку времени менеджером присваивается статус
completed/client didn't come/saloon fault/rescheduled
Изменения статусов запоминаются: время и автор изменения.
На одно время может быть несколько записей: актуальная и отмененная и удаленная и отклоненная.



Что пришлось искать дополнительно:

Номер телефона, как тип данных

models.ForeignKey() в редакции примера из урока в новой версии django уже не работал,
null=True при наличии хотя бы одной записи в связанной таблице - подошло.
подходило также:  default=(функция, находящая какой-то объект в связанной таблице),
если есть хотя бы одна запись.

отличия blank и Null, и как с этим работать

две ссылки models.ForeignKey() к одной и той же таблице заработали после включения
related_name=... в параметры models.ForeignKey()

